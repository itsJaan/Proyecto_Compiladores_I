package proyectocompiladores;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol symbol;

    public void syntax_error(Symbol symbol){
        this.symbol = symbol;
    }

    public Symbol getSymbol(){
        return this.symbol;
    }
:};

terminal imports, if_, Public_, Module, sub,for_,dim,end_,integer_,boolean_,string_, 
         System_,console_,writeline,as,do_,while_,struct_,then,else_,function_,
         return_,next,private_,loop,exit,until,to,and,or,true_,false_,like,
         mod,int_,step_,null_, identificador,mayorigual, menorigual,igual, mayor, menor,
         suma,resta,mult,div,potencia,texto_,numero,espacio,modulo,punto,comillaD,
         comillaS,parentesisA,parentesisC,llaveA,llaveC,guionB,findelinea,
         continuaciondelinea,comentario,main_,coma_,error_, byval;

non terminal UC, IMPORTS, MODULE, IDENTIFICADOR_IMPORT, FUNCTION_, STRUCT_, MAIN, PARAMETRO, TYPE_,
             INFUNCION,SENTENCIA, DECLARACION, TYPEDECLARE,OPERACION_ARITMETICA, NEXT_MODULE, INMAIN,
             INPARENTESIS, OPERACION_ARITMETICA_MAS_MENOS, OPERACION_MOD, OPERACION_MULT_DIV,
             OPERACION_POTENCIA, OPERACION_PARENTESIS, BOOLEAN, SENTENCIA_MAIN, IF_MAIN, ELSE_IF_MAIN,
             CONDICION, OPERADORRELACIONAL, FOR_MAIN, INFOR_MAIN, SENTENCIA_FOR, IF_FOR, ELSE_IF_FOR,
             WHILE_FOR, INWHILE_FOR, WHILE_MAIN, INWHILE_MAIN, SENTENCIA_WHILE, IF_WHILE, ELSE_IF_WHILE,
             FOR_WHILE, INFOR_WHILE, LLAMAR_FUNCION, PARAMETRO_SENCILLO, DECLARACIONSENCILLA, FUNCION_,
             SENTENCIA_FUNCION, IF_FUNCION, ELSE_IF_FUNCION, FOR_FUNCION, INFOR_FUNCION, SENTENCIA_FOR_FUNCION,
             IF_FOR_FUNCION, ELSE_IF_FOR_FUNCION, WHILE_FOR_FUNCION, INWHILE_FOR_FUNCION, WHILE_FUNCION,
             INWHILE_FUNCION, SENTENCIA_WHILE_FUNCION, IF_WHILE_FUNCION, FOR_WHILE_FUNCION,
             INFOR_WHILE_FUNCION,ELSE_IF_WHILE_FUNCION,STRUCTMAIN,FUNCIONMAIN, INIF, INIF_FOR, INIF_WHILE,
             INIF_FUNCION , INIF_FOR_FUNCION , INIF_WHILE_FUNCION,ELSE_IF_WHILE_FUNCION2 ,ELSE_IF_WHILE2,
             ELSE_IF_MAIN2 ,ELSE_IF_FOR2 ,ELSE_IF_FUNCION2,ELSE_IF_FOR_FUNCION2, NUMERO,LLAMAR_SUB,PARAMETRO_SENCILLO2;


start with UC;

UC ::= IMPORTS MODULE|IMPORTS MODULE findelinea;

IMPORTS ::= imports IDENTIFICADOR_IMPORT findelinea|imports IDENTIFICADOR_IMPORT findelinea IMPORTS;

IDENTIFICADOR_IMPORT ::= identificador|identificador punto IDENTIFICADOR_IMPORT|System_|System_ punto IDENTIFICADOR_IMPORT;

MODULE ::= Public_  Module  identificador findelinea NEXT_MODULE end_ Module;

NEXT_MODULE ::= MAIN|STRUCT_ MAIN|FUNCION_ MAIN |STRUCT_ findelinea NEXT_MODULE|FUNCION_ findelinea NEXT_MODULE |MAIN findelinea NEXT_MODULE;

MAIN ::= Public_  sub  main_ parentesisA parentesisC findelinea  INMAIN end_ sub findelinea|Public_ sub  identificador parentesisA PARAMETRO parentesisC findelinea  INMAIN end_ sub findelinea;

INMAIN ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_MAIN|
           LLAMAR_FUNCION findelinea|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INMAIN|DECLARACION findelinea INMAIN|
           SENTENCIA_MAIN INMAIN|LLAMAR_FUNCION findelinea INMAIN |LLAMAR_SUB findelinea|LLAMAR_SUB findelinea INMAIN| exit sub findelinea;

LLAMAR_SUB ::= identificador PARAMETRO_SENCILLO findelinea;

NUMERO ::= numero | resta numero;

INPARENTESIS::= texto_|NUMERO|BOOLEAN|identificador|identificador punto identificador|OPERACION_ARITMETICA|texto_ continuaciondelinea INPARENTESIS|
                NUMERO continuaciondelinea INPARENTESIS|OPERACION_ARITMETICA continuaciondelinea INPARENTESIS|
                BOOLEAN continuaciondelinea INPARENTESIS|identificador continuaciondelinea INPARENTESIS|identificador punto identificador continuaciondelinea INPARENTESIS;


OPERACION_ARITMETICA ::= NUMERO OPERACION_ARITMETICA_MAS_MENOS|OPERACION_PARENTESIS;

OPERACION_ARITMETICA_MAS_MENOS ::= suma NUMERO|resta NUMERO|suma NUMERO OPERACION_ARITMETICA_MAS_MENOS|
                                   resta NUMERO OPERACION_ARITMETICA_MAS_MENOS|OPERACION_MOD;

OPERACION_MOD ::= mod NUMERO|mod NUMERO OPERACION_MOD|OPERACION_MULT_DIV;

OPERACION_MULT_DIV::= mult NUMERO|div NUMERO|mult NUMERO OPERACION_MULT_DIV|div NUMERO OPERACION_MULT_DIV|OPERACION_POTENCIA;

OPERACION_POTENCIA ::= potencia NUMERO OPERACION_POTENCIA|potencia NUMERO|OPERACION_PARENTESIS;

OPERACION_PARENTESIS ::= parentesisA OPERACION_ARITMETICA parentesisC| espacio OPERACION_ARITMETICA_MAS_MENOS;

DECLARACION ::= dim  identificador  as  TYPE_|dim  identificador  as  TYPE_  igual  TYPEDECLARE|dim identificador  igual  TYPEDECLARE|
                dim  identificador igual LLAMAR_FUNCION|dim  identificador as TYPE_ igual LLAMAR_FUNCION|dim  identificador as TYPE_ igual OPERACION_ARITMETICA|dim identificador igual OPERACION_ARITMETICA|
                identificador igual identificador|identificador igual LLAMAR_FUNCION|identificador igual OPERACION_ARITMETICA|
                identificador igual NUMERO|identificador igual BOOLEAN|identificador igual texto_ findelinea|identificador punto identificador igual identificador|
                identificador punto identificador igual LLAMAR_FUNCION|identificador punto identificador igual OPERACION_ARITMETICA|
                identificador punto identificador igual NUMERO|identificador punto identificador igual BOOLEAN|identificador punto identificador igual texto_ | dim identificador igual identificador | dim identificador as TYPE_ igual identificador;

TYPE_ ::= string_|boolean_|integer_|int_|identificador; 

TYPEDECLARE ::= texto_|NUMERO|BOOLEAN;

BOOLEAN ::= true_|false_;

SENTENCIA_MAIN ::= IF_MAIN|FOR_MAIN|WHILE_MAIN;

IF_MAIN ::=  if_ CONDICION then findelinea INIF end_ if_ findelinea|if_ CONDICION then findelinea INIF else_ findelinea INIF end_ if_ findelinea|
             if_ CONDICION then findelinea INIF ELSE_IF_MAIN findelinea INIF end_ if_ findelinea|if_ CONDICION then findelinea INIF ELSE_IF_MAIN2 end_ if_ findelinea;

INIF ::=   console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_MAIN|
           LLAMAR_FUNCION findelinea|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF|DECLARACION findelinea INIF|
           SENTENCIA_MAIN findelinea INIF|LLAMAR_FUNCION findelinea INIF;

ELSE_IF_MAIN ::= else_ if_ CONDICION then findelinea INIF  ELSE_IF_MAIN|else_ if_ CONDICION then findelinea INIF else_ ;
ELSE_IF_MAIN2::= else_ if_ CONDICION then findelinea INIF  ELSE_IF_MAIN2|else_ if_ CONDICION then findelinea INIF;

CONDICION ::= identificador OPERADORRELACIONAL identificador|identificador OPERADORRELACIONAL NUMERO|
              identificador OPERADORRELACIONAL BOOLEAN|identificador OPERADORRELACIONAL OPERACION_ARITMETICA|
              OPERACION_ARITMETICA OPERADORRELACIONAL NUMERO|OPERACION_ARITMETICA OPERADORRELACIONAL OPERACION_ARITMETICA|
              OPERACION_ARITMETICA OPERADORRELACIONAL identificador|OPERACION_ARITMETICA OPERADORRELACIONAL BOOLEAN|
              BOOLEAN OPERADORRELACIONAL BOOLEAN|BOOLEAN OPERADORRELACIONAL NUMERO|BOOLEAN OPERADORRELACIONAL identificador|
              BOOLEAN OPERADORRELACIONAL OPERACION_ARITMETICA|NUMERO OPERADORRELACIONAL NUMERO|
              NUMERO OPERADORRELACIONAL identificador|NUMERO OPERADORRELACIONAL OPERACION_ARITMETICA|
              NUMERO OPERADORRELACIONAL BOOLEAN|BOOLEAN OPERADORRELACIONAL LLAMAR_FUNCION|
              identificador OPERADORRELACIONAL LLAMAR_FUNCION|NUMERO OPERADORRELACIONAL LLAMAR_FUNCION|
              OPERACION_ARITMETICA OPERADORRELACIONAL LLAMAR_FUNCION|LLAMAR_FUNCION OPERADORRELACIONAL BOOLEAN|
              LLAMAR_FUNCION OPERADORRELACIONAL identificador|LLAMAR_FUNCION OPERADORRELACIONAL NUMERO|
              LLAMAR_FUNCION OPERADORRELACIONAL OPERACION_ARITMETICA;

OPERADORRELACIONAL ::= mayor igual|menor igual|igual|mayor|menor;

FOR_MAIN ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO findelinea INFOR_MAIN next identificador findelinea;

INFOR_MAIN::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
              SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INFOR_MAIN|DECLARACION findelinea INFOR_MAIN|
              SENTENCIA_FOR INFOR_MAIN|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INFOR_MAIN |exit for_ findelinea;


SENTENCIA_FOR::= IF_FOR|FOR_MAIN|WHILE_FOR; 

INIF_FOR ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
             SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF_FOR|DECLARACION findelinea INIF_FOR|
             SENTENCIA_FOR INIF_FOR|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_FOR |exit for_ findelinea;

IF_FOR ::= if_ CONDICION then findelinea INIF_FOR  end_ if_ findelinea|if_ CONDICION then findelinea INIF_FOR  else_ findelinea INIF_FOR  end_ if_ findelinea|
           if_ CONDICION then findelinea INIF_FOR ELSE_IF_FOR findelinea INIF_FOR end_ if_ findelinea|
           if_ CONDICION then findelinea INIF_FOR ELSE_IF_FOR2 end_ if_ findelinea;

ELSE_IF_FOR ::= else_ if_ CONDICION then findelinea  INIF_FOR else_|else_ if_ CONDICION then findelinea INIF_FOR ELSE_IF_FOR;
ELSE_IF_FOR2::= else_ if_ CONDICION then findelinea  INIF_FOR|else_ if_ CONDICION then findelinea INIF_FOR ELSE_IF_FOR2;

WHILE_FOR::= do_ until CONDICION findelinea INWHILE_FOR loop findelinea;

INWHILE_FOR ::=  console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_WHILE|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INWHILE_FOR|DECLARACION findelinea INWHILE_FOR|
                 SENTENCIA_WHILE INWHILE_FOR|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INWHILE_FOR|exit do_ findelinea| exit for_ findelinea;

WHILE_MAIN::= do_ until CONDICION findelinea INWHILE_MAIN loop findelinea;

INWHILE_MAIN ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_WHILE|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INWHILE_MAIN|DECLARACION findelinea INWHILE_MAIN|
                 SENTENCIA_WHILE INWHILE_MAIN|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INWHILE_MAIN|exit do_ findelinea;

SENTENCIA_WHILE ::= IF_WHILE |FOR_WHILE|WHILE_MAIN;

INIF_WHILE ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_WHILE|
               console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF_WHILE|DECLARACION findelinea INIF_WHILE|
               SENTENCIA_WHILE INIF_WHILE|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_WHILE|exit do_ findelinea; 

IF_WHILE ::= if_ CONDICION then findelinea INIF_WHILE  end_ if_ findelinea|
             if_ CONDICION then findelinea INIF_WHILE  else_ findelinea INIF_WHILE  end_ if_ findelinea|
             if_ CONDICION then findelinea INIF_WHILE ELSE_IF_WHILE findelinea INIF_WHILE end_ if_ findelinea|
             if_ CONDICION then findelinea INIF_WHILE ELSE_IF_WHILE2 end_ if_ findelinea;

ELSE_IF_WHILE ::= else_ if_ CONDICION then findelinea  INIF_WHILE else_|else_ if_ CONDICION then findelinea INIF_WHILE ELSE_IF_WHILE;
ELSE_IF_WHILE2::= else_ if_ CONDICION then findelinea  INIF_WHILE |else_ if_ CONDICION then findelinea INIF_WHILE ELSE_IF_WHILE2;

FOR_WHILE ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO findelinea INFOR_WHILE next identificador findelinea;

INFOR_WHILE ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INFOR_WHILE|
                DECLARACION findelinea INFOR_WHILE|SENTENCIA_FOR INFOR_WHILE|LLAMAR_FUNCION findelinea|
                LLAMAR_FUNCION findelinea INFOR_WHILE |exit for_ findelinea|exit do_ findelinea;

LLAMAR_FUNCION ::= identificador parentesisA parentesisC| identificador parentesisA PARAMETRO_SENCILLO parentesisC;

PARAMETRO_SENCILLO ::=  parentesisA PARAMETRO_SENCILLO2 parentesisC coma_ PARAMETRO_SENCILLO|
                        parentesisA PARAMETRO_SENCILLO2 parentesisC|PARAMETRO_SENCILLO2 coma_ PARAMETRO_SENCILLO|
                        PARAMETRO_SENCILLO2;

PARAMETRO_SENCILLO2 ::= identificador|BOOLEAN|NUMERO;

DECLARACIONSENCILLA ::= dim identificador as TYPE_ findelinea|dim identificador as TYPE_ findelinea DECLARACIONSENCILLA;

STRUCT_ ::= Public_ struct_ identificador findelinea DECLARACIONSENCILLA end_ struct_ ;

FUNCION_ ::= private_ function_ identificador parentesisA PARAMETRO parentesisC as TYPE_ findelinea INFUNCION end_ function_;

PARAMETRO ::= identificador as TYPE_|identificador as TYPE_ coma_ PARAMETRO|byval identificador as TYPE_ coma_ PARAMETRO|byval identificador as TYPE_;

INFUNCION ::=  console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_FUNCION|
               LLAMAR_FUNCION findelinea|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INFUNCION|DECLARACION findelinea INFUNCION|
               SENTENCIA_FUNCION INFUNCION|LLAMAR_FUNCION findelinea INFUNCION|exit function_ findelinea;

SENTENCIA_FUNCION ::= IF_FUNCION|FOR_FUNCION|WHILE_FUNCION;

IF_FUNCION ::=if_ CONDICION then findelinea INIF_FUNCION  end_ if_ findelinea|
              if_ CONDICION then findelinea INIF_FUNCION  else_ findelinea INIF_FUNCION  end_ if_ findelinea|
              if_ CONDICION then findelinea INIF_FUNCION ELSE_IF_FUNCION findelinea INIF_FUNCION end_ if_ findelinea|
              if_ CONDICION then findelinea INIF_FUNCION ELSE_IF_FUNCION2 end_ if_ findelinea;

INIF_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                 SENTENCIA_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF_FUNCION|DECLARACION findelinea INIF_FUNCION|
                 SENTENCIA_FUNCION INIF_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_FUNCION | exit function_ findelinea;

ELSE_IF_FUNCION ::= else_ if_ CONDICION then findelinea INIF_FUNCION else_|else_ if_ CONDICION then findelinea INIF_FUNCION ELSE_IF_FUNCION;
ELSE_IF_FUNCION2::= else_ if_ CONDICION then findelinea INIF_FUNCION |else_ if_ CONDICION then findelinea INIF_FUNCION ELSE_IF_FUNCION2;

FOR_FUNCION ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO findelinea INFOR_FUNCION next identificador findelinea;

INFOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                  SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INFOR_FUNCION|DECLARACION findelinea INFOR_FUNCION|
                  SENTENCIA_FOR_FUNCION INFOR_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INFOR_FUNCION |exit function_ findelinea|exit for_ findelinea;

SENTENCIA_FOR_FUNCION ::= IF_FOR_FUNCION |FOR_FUNCION|WHILE_FOR_FUNCION;

IF_FOR_FUNCION ::= if_ CONDICION then findelinea INIF_FOR_FUNCION  end_ if_ findelinea|
                   if_ CONDICION then findelinea INIF_FOR_FUNCION  else_ findelinea INIF_FOR_FUNCION  end_ if_ findelinea|
                   if_ CONDICION then findelinea INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION findelinea INIF_FOR_FUNCION end_ if_ findelinea|
                   if_ CONDICION then findelinea INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION2 end_ if_ findelinea;

INIF_FOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF_FOR_FUNCION|DECLARACION findelinea INIF_FOR_FUNCION|
                 SENTENCIA_FOR_FUNCION INIF_FOR_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_FUNCION | exit function_ findelinea|exit for_ findelinea; 

ELSE_IF_FOR_FUNCION ::= else_ if_ CONDICION then findelinea INIF_FOR_FUNCION else_|else_ if_ CONDICION then findelinea INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION;
ELSE_IF_FOR_FUNCION2::= else_ if_ CONDICION then findelinea INIF_FOR_FUNCION |else_ if_ CONDICION then findelinea INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION2;

WHILE_FOR_FUNCION::= do_ until CONDICION findelinea INWHILE_FOR_FUNCION loop findelinea;

INWHILE_FOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_WHILE|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INWHILE_MAIN|DECLARACION findelinea INWHILE_MAIN|
                 SENTENCIA_WHILE INWHILE_MAIN|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INWHILE_MAIN|exit do_ findelinea |exit for_ findelinea | exit function_ findelinea;

WHILE_FUNCION::= do_ until CONDICION findelinea INWHILE_FUNCION loop findelinea;

INWHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INWHILE_FUNCION|DECLARACION findelinea INWHILE_FUNCION|
                 SENTENCIA_FOR_FUNCION INWHILE_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_FUNCION| exit do_ findelinea |exit function_ findelinea;

SENTENCIA_WHILE_FUNCION ::= IF_WHILE_FUNCION |FOR_WHILE_FUNCION|WHILE_FUNCION;

IF_WHILE_FUNCION ::= if_ CONDICION then INIF_WHILE_FUNCION end_ if_|if_ CONDICION then INIF_WHILE_FUNCION else_ INIF_WHILE_FUNCION end_ if_|
                     if_ CONDICION then INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION else_ INIF_WHILE_FUNCION end_ if_|
                     if_ CONDICION then INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION findelinea|
                     if_ CONDICION then findelinea INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION2 end_ if_ findelinea;
                     

INIF_WHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INIF_FOR_FUNCION|DECLARACION findelinea INIF_FOR_FUNCION|
                 SENTENCIA_FOR_FUNCION INIF_FOR_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INIF_FUNCION | exit function_ findelinea|exit for_ findelinea;

ELSE_IF_WHILE_FUNCION ::= else_ if_ CONDICION then findelinea INIF_WHILE_FUNCION else_|else_ if_ CONDICION then findelinea INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION;
ELSE_IF_WHILE_FUNCION2::= else_ if_ CONDICION then findelinea INIF_WHILE_FUNCION |else_ if_ CONDICION then findelinea INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION2;


FOR_WHILE_FUNCION ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO findelinea INFOR_WHILE_FUNCION next identificador findelinea;

INFOR_WHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea|DECLARACION findelinea|SENTENCIA_WHILE|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC findelinea INFOR_WHILE_FUNCION|DECLARACION findelinea INFOR_WHILE_FUNCION|
                 SENTENCIA_WHILE INFOR_WHILE_FUNCION|LLAMAR_FUNCION findelinea|LLAMAR_FUNCION findelinea INFOR_WHILE_FUNCION|exit do_ findelinea |exit for_ findelinea | exit function_ findelinea;