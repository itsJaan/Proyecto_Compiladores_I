package proyectocompiladores;
import java.util.ArrayList;
import java_cup.runtime.Symbol;

parser code
{:
    private Symbol symbol;
    private Symbol cur_token;
    String errorInrrecuperable = "";
    ArrayList<String> lista = new ArrayList<String>();

    public void syntax_error(Symbol symbol){
        this.symbol = symbol;
        lista.add("La Cadena: " + this.symbol.value+" en la Linea:" + (this.symbol.right+1) +" ,Columna: "+(this.symbol.left+1)+ " esta fuera de contexto.");
        
    }

    public void unrecovered_syntax_error(Symbol cur_token){
        errorInrrecuperable = "La Cadena: " + cur_token.value+" en la Linea:" + (cur_token.right+1) +" ,Columna: "+(cur_token.left+1)+ " esta fuera de contexto.";
    }

    public String getUnrecoverSyntax(){
        return errorInrrecuperable;
    }

    public ArrayList<String> getError(){
        return  lista;
    }
:};

terminal imports, if_, Public_, Module, sub,for_,dim,end_,integer_,boolean_,string_, 
         System_,console_,writeline,as,do_,while_,struct_,then,else_,function_,
         return_,next,private_,loop,exit,until,to,and,or,true_,false_,like,
         mod,int_,step_,null_, identificador,mayorigual, menorigual,igual, mayor, menor,
         suma,resta,mult,div,potencia,texto_,numero,espacio,modulo,punto,comillaD,
         comillaS,parentesisA,parentesisC,llaveA,llaveC,guionB,findelinea,
         continuaciondelinea,comentario,main_,coma_,error_, byval, elseif_,mod_,readline;

non terminal UC, IMPORTS, MODULE, IDENTIFICADOR_IMPORT, FUNCTION_, STRUCT_, MAIN, PARAMETRO, TYPE_,
             INFUNCION,SENTENCIA, DECLARACION, TYPEDECLARE,OPERACION_ARITMETICA, OPERADOR_ARITMETICO, NEXT_MODULE, INMAIN,
             INPARENTESIS, BOOLEAN, SENTENCIA_MAIN, IF_MAIN, ELSE_IF_MAIN,
             CONDICION, OPERADORRELACIONAL, FOR_MAIN, INFOR_MAIN, SENTENCIA_FOR, IF_FOR, ELSE_IF_FOR,
             WHILE_FOR, INWHILE_FOR, WHILE_MAIN, INWHILE_MAIN, SENTENCIA_WHILE, IF_WHILE, ELSE_IF_WHILE,
             FOR_WHILE, INFOR_WHILE, LLAMAR_FUNCION, PARAMETRO_SENCILLO, DECLARACIONSENCILLA, FUNCION_,
             SENTENCIA_FUNCION, IF_FUNCION, ELSE_IF_FUNCION, FOR_FUNCION, INFOR_FUNCION, SENTENCIA_FOR_FUNCION,
             IF_FOR_FUNCION, ELSE_IF_FOR_FUNCION, WHILE_FOR_FUNCION, INWHILE_FOR_FUNCION, WHILE_FUNCION,
             INWHILE_FUNCION, SENTENCIA_WHILE_FUNCION, IF_WHILE_FUNCION, FOR_WHILE_FUNCION,
             INFOR_WHILE_FUNCION,ELSE_IF_WHILE_FUNCION,STRUCTMAIN,FUNCIONMAIN, INIF, INIF_FOR, INIF_WHILE,
             INIF_FUNCION , INIF_FOR_FUNCION , INIF_WHILE_FUNCION,ELSE_IF_WHILE_FUNCION2 ,ELSE_IF_WHILE2,
             ELSE_IF_MAIN2 ,ELSE_IF_FOR2 ,ELSE_IF_FUNCION2,ELSE_IF_FOR_FUNCION2, NUMERO,LLAMAR_SUB,PARAMETROS_TYPE, WHILE_TYPE,ELSEIF_TYPE,
             OPERACION_AR,FIN_CON_COMENT,PARAMETROS_SUB,OPERANDOS_TYPE,READLINE_FUNCION,COMENTARIO_ILIMITADO;


precedence left suma, resta;
precedence left mod_;
precedence left mult, div;
precedence right potencia;
precedence left parentesisA, parentesisC;


start with UC;


UC ::= IMPORTS MODULE|IMPORTS MODULE COMENTARIO_ILIMITADO|comentario findelinea UC|comentario findelinea;

IMPORTS ::= imports IDENTIFICADOR_IMPORT FIN_CON_COMENT|imports IDENTIFICADOR_IMPORT FIN_CON_COMENT IMPORTS|error findelinea IMPORTS;

IDENTIFICADOR_IMPORT ::= identificador|identificador punto IDENTIFICADOR_IMPORT|System_|System_ punto IDENTIFICADOR_IMPORT|error findelinea IDENTIFICADOR_IMPORT;

MODULE ::= Public_  Module  identificador findelinea NEXT_MODULE end_ Module |Public_  Module  identificador  comentario findelinea NEXT_MODULE end_ Module;

NEXT_MODULE ::= MAIN|STRUCT_ MAIN|FUNCION_  MAIN |STRUCT_ FIN_CON_COMENT NEXT_MODULE|FUNCION_ FIN_CON_COMENT NEXT_MODULE |MAIN findelinea NEXT_MODULE| comentario findelinea NEXT_MODULE|error findelinea NEXT_MODULE;

MAIN ::= Public_  sub  main_ parentesisA parentesisC findelinea  INMAIN end_ sub FIN_CON_COMENT|Public_ sub  identificador parentesisA PARAMETRO parentesisC findelinea  INMAIN end_ sub FIN_CON_COMENT|
         Public_  sub  main_ parentesisA parentesisC comentario findelinea  INMAIN end_ sub FIN_CON_COMENT|Public_ sub  identificador parentesisA PARAMETRO parentesisC comentario findelinea  INMAIN end_ sub FIN_CON_COMENT;

FIN_CON_COMENT ::= findelinea | comentario findelinea;

COMENTARIO_ILIMITADO ::= comentario findelinea| comentario findelinea COMENTARIO_ILIMITADO|comentario;

INMAIN ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_MAIN|comentario findelinea | comentario  findelinea INMAIN|
           LLAMAR_FUNCION FIN_CON_COMENT|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INMAIN|DECLARACION INMAIN|
           SENTENCIA_MAIN INMAIN|LLAMAR_FUNCION FIN_CON_COMENT INMAIN |LLAMAR_SUB |LLAMAR_SUB  INMAIN| exit sub FIN_CON_COMENT|exit sub FIN_CON_COMENT INMAIN|
           console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INMAIN|
           console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INMAIN|error findelinea INMAIN;

LLAMAR_SUB ::= identificador PARAMETROS_SUB;

PARAMETROS_SUB ::= PARAMETROS_TYPE FIN_CON_COMENT |PARAMETROS_TYPE coma_ PARAMETROS_SUB|parentesisA PARAMETROS_TYPE parentesisC coma_ PARAMETROS_SUB|
                   parentesisA PARAMETROS_TYPE parentesisC FIN_CON_COMENT;

NUMERO ::= numero | resta numero;

INPARENTESIS::= texto_|NUMERO|BOOLEAN|identificador|identificador punto identificador|OPERACION_ARITMETICA|texto_ continuaciondelinea INPARENTESIS|
                NUMERO continuaciondelinea INPARENTESIS|OPERACION_ARITMETICA continuaciondelinea INPARENTESIS|
                BOOLEAN continuaciondelinea INPARENTESIS|identificador continuaciondelinea INPARENTESIS|identificador punto identificador continuaciondelinea INPARENTESIS;


OPERANDOS_TYPE ::= NUMERO|identificador|LLAMAR_FUNCION;
OPERACION_ARITMETICA ::= OPERANDOS_TYPE OPERADOR_ARITMETICO OPERACION_AR|

                         parentesisA OPERACION_ARITMETICA parentesisC|
                         OPERACION_ARITMETICA parentesisA OPERACION_ARITMETICA parentesisC|
                         parentesisA OPERACION_ARITMETICA parentesisC OPERACION_ARITMETICA|
                         OPERACION_ARITMETICA parentesisA OPERACION_ARITMETICA parentesisC OPERACION_ARITMETICA|
                         parentesisA OPERACION_ARITMETICA parentesisC OPERADOR_ARITMETICO OPERACION_ARITMETICA|
                         OPERACION_ARITMETICA parentesisA OPERACION_ARITMETICA parentesisC OPERADOR_ARITMETICO OPERACION_ARITMETICA|
                         OPERANDOS_TYPE parentesisA OPERACION_ARITMETICA parentesisC|
                         parentesisA OPERACION_ARITMETICA parentesisC OPERANDOS_TYPE|
                         parentesisA OPERACION_ARITMETICA parentesisC OPERADOR_ARITMETICO OPERANDOS_TYPE|
                         OPERACION_ARITMETICA parentesisA OPERACION_ARITMETICA parentesisC OPERADOR_ARITMETICO OPERANDOS_TYPE|

                         parentesisA OPERANDOS_TYPE parentesisC|
                         OPERACION_ARITMETICA parentesisA OPERANDOS_TYPE parentesisC|
                         parentesisA OPERANDOS_TYPE parentesisC OPERACION_ARITMETICA|
                         OPERACION_ARITMETICA parentesisA OPERANDOS_TYPE parentesisC OPERACION_ARITMETICA|
                         parentesisA OPERANDOS_TYPE parentesisC OPERADOR_ARITMETICO OPERACION_ARITMETICA|
                         OPERACION_ARITMETICA parentesisA OPERANDOS_TYPE parentesisC OPERADOR_ARITMETICO OPERACION_ARITMETICA|
                         parentesisA OPERANDOS_TYPE parentesisC OPERADOR_ARITMETICO OPERANDOS_TYPE|
                         OPERACION_ARITMETICA parentesisA OPERANDOS_TYPE parentesisC OPERADOR_ARITMETICO OPERANDOS_TYPE|
                         OPERANDOS_TYPE parentesisA OPERANDOS_TYPE parentesisC|
                         parentesisA OPERANDOS_TYPE parentesisC OPERANDOS_TYPE;
                         
                         
                         

OPERADOR_ARITMETICO ::= suma|resta|mult|div|potencia|mod_; 

OPERACION_AR ::= OPERANDOS_TYPE|OPERACION_ARITMETICA;

DECLARACION ::= dim  identificador  as  TYPE_ FIN_CON_COMENT|dim  identificador  as  TYPE_  igual  TYPEDECLARE FIN_CON_COMENT|dim identificador  igual  TYPEDECLARE FIN_CON_COMENT|
                dim  identificador igual LLAMAR_FUNCION FIN_CON_COMENT|dim  identificador as TYPE_ igual LLAMAR_FUNCION FIN_CON_COMENT|dim  identificador as TYPE_ igual OPERACION_ARITMETICA FIN_CON_COMENT|dim identificador igual OPERACION_ARITMETICA FIN_CON_COMENT|
                identificador igual identificador FIN_CON_COMENT|identificador igual LLAMAR_FUNCION FIN_CON_COMENT|identificador igual OPERACION_ARITMETICA FIN_CON_COMENT|
                identificador igual NUMERO|identificador igual BOOLEAN FIN_CON_COMENT|identificador igual texto_ FIN_CON_COMENT|identificador igual READLINE_FUNCION FIN_CON_COMENT|identificador punto identificador igual identificador FIN_CON_COMENT|
                identificador punto identificador igual LLAMAR_FUNCION FIN_CON_COMENT|identificador punto identificador igual OPERACION_ARITMETICA FIN_CON_COMENT|identificador punto identificador igual READLINE_FUNCION FIN_CON_COMENT|
                identificador punto identificador igual NUMERO FIN_CON_COMENT|identificador punto identificador igual BOOLEAN FIN_CON_COMENT|identificador punto identificador igual texto_ FIN_CON_COMENT| dim identificador igual identificador FIN_CON_COMENT|
                dim identificador as TYPE_ igual identificador FIN_CON_COMENT|dim identificador igual LLAMAR_SUB|dim identificador as TYPE_ igual LLAMAR_SUB|identificador punto identificador igual LLAMAR_SUB | identificador igual LLAMAR_SUB;

TYPE_ ::= string_|boolean_|integer_|int_|identificador; 

READLINE_FUNCION ::= console_ punto readline parentesisA parentesisC;

TYPEDECLARE ::= texto_|NUMERO|BOOLEAN|READLINE_FUNCION;

BOOLEAN ::= true_|false_;

SENTENCIA_MAIN ::= IF_MAIN|FOR_MAIN|WHILE_MAIN;

WHILE_TYPE ::= until|while_;

ELSEIF_TYPE ::= else_ if_| elseif_;

IF_MAIN ::= if_ CONDICION then FIN_CON_COMENT INIF end_ if_ FIN_CON_COMENT|if_ CONDICION then FIN_CON_COMENT INIF else_ FIN_CON_COMENT INIF end_ if_ FIN_CON_COMENT |
            if_ CONDICION then FIN_CON_COMENT INIF ELSE_IF_MAIN FIN_CON_COMENT INIF end_ if_ FIN_CON_COMENT|if_ CONDICION then FIN_CON_COMENT INIF ELSE_IF_MAIN2 end_ if_ FIN_CON_COMENT;

INIF ::=   console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_MAIN|comentario findelinea | comentario  findelinea INIF|
           LLAMAR_FUNCION FIN_CON_COMENT|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF|DECLARACION INIF|
           SENTENCIA_MAIN findelinea INIF|LLAMAR_FUNCION FIN_CON_COMENT INIF|LLAMAR_SUB |LLAMAR_SUB  INIF|exit sub FIN_CON_COMENT INIF|exit sub FIN_CON_COMENT|
           console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF|
           console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF;

ELSE_IF_MAIN ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF  ELSE_IF_MAIN|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF else_ ;
ELSE_IF_MAIN2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF  ELSE_IF_MAIN2|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF;

CONDICION ::= identificador OPERADORRELACIONAL identificador|identificador OPERADORRELACIONAL NUMERO|
              identificador OPERADORRELACIONAL BOOLEAN|identificador OPERADORRELACIONAL OPERACION_ARITMETICA|
              OPERACION_ARITMETICA OPERADORRELACIONAL NUMERO|OPERACION_ARITMETICA OPERADORRELACIONAL OPERACION_ARITMETICA|
              OPERACION_ARITMETICA OPERADORRELACIONAL identificador|OPERACION_ARITMETICA OPERADORRELACIONAL BOOLEAN|
              BOOLEAN OPERADORRELACIONAL BOOLEAN|BOOLEAN OPERADORRELACIONAL NUMERO|BOOLEAN OPERADORRELACIONAL identificador|
              BOOLEAN OPERADORRELACIONAL OPERACION_ARITMETICA|NUMERO OPERADORRELACIONAL NUMERO|
              NUMERO OPERADORRELACIONAL identificador|NUMERO OPERADORRELACIONAL OPERACION_ARITMETICA|
              NUMERO OPERADORRELACIONAL BOOLEAN|BOOLEAN OPERADORRELACIONAL LLAMAR_FUNCION|
              identificador OPERADORRELACIONAL LLAMAR_FUNCION|NUMERO OPERADORRELACIONAL LLAMAR_FUNCION|
              OPERACION_ARITMETICA OPERADORRELACIONAL LLAMAR_FUNCION|LLAMAR_FUNCION OPERADORRELACIONAL BOOLEAN|
              LLAMAR_FUNCION OPERADORRELACIONAL identificador|LLAMAR_FUNCION OPERADORRELACIONAL NUMERO|
              LLAMAR_FUNCION OPERADORRELACIONAL OPERACION_ARITMETICA;

OPERADORRELACIONAL ::= mayor igual|menor igual|igual|mayor|menor;

FOR_MAIN ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO FIN_CON_COMENT INFOR_MAIN next identificador FIN_CON_COMENT;

INFOR_MAIN::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|
              SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INFOR_MAIN|DECLARACION INFOR_MAIN|comentario findelinea | comentario  findelinea INFOR_MAIN|
              SENTENCIA_FOR INFOR_MAIN|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INFOR_MAIN |LLAMAR_SUB |LLAMAR_SUB  INFOR_MAIN|exit for_ FIN_CON_COMENT INFOR_MAIN|exit for_ FIN_CON_COMENT|
              console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INFOR_MAIN|
              console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INFOR_MAIN;


SENTENCIA_FOR::= IF_FOR|FOR_MAIN|WHILE_FOR; 

INIF_FOR ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|
             SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF_FOR|DECLARACION INIF_FOR|comentario findelinea | comentario  findelinea INIF_FOR|
             SENTENCIA_FOR INIF_FOR|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INIF_FOR |LLAMAR_SUB |LLAMAR_SUB  INIF_FOR|exit for_ FIN_CON_COMENT INIF_FOR|exit sub FIN_CON_COMENT INIF_FOR|exit for_ FIN_CON_COMENT|exit sub FIN_CON_COMENT|
             console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF_FOR|
             console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF_FOR;

IF_FOR ::= if_ CONDICION then FIN_CON_COMENT INIF_FOR  end_ if_ FIN_CON_COMENT|if_ CONDICION then FIN_CON_COMENT INIF_FOR  else_ FIN_CON_COMENT INIF_FOR  end_ if_ FIN_CON_COMENT|
           if_ CONDICION then FIN_CON_COMENT INIF_FOR ELSE_IF_FOR FIN_CON_COMENT INIF_FOR end_ if_ FIN_CON_COMENT|
           if_ CONDICION then FIN_CON_COMENT INIF_FOR ELSE_IF_FOR2 end_ if_ FIN_CON_COMENT;

ELSE_IF_FOR ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT  INIF_FOR else_|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR ELSE_IF_FOR;
ELSE_IF_FOR2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT  INIF_FOR|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR ELSE_IF_FOR2;

WHILE_FOR::= do_ WHILE_TYPE CONDICION FIN_CON_COMENT INWHILE_FOR loop FIN_CON_COMENT;

INWHILE_FOR ::=  console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_WHILE|comentario findelinea | comentario  findelinea INWHILE_FOR|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INWHILE_FOR|DECLARACION INWHILE_FOR|
                 SENTENCIA_WHILE INWHILE_FOR|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INWHILE_FOR|LLAMAR_SUB |LLAMAR_SUB  INWHILE_FOR|exit do_ FIN_CON_COMENT INWHILE_FOR| exit for_ FIN_CON_COMENT INWHILE_FOR|exit do_ FIN_CON_COMENT| exit for_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INWHILE_FOR|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INWHILE_FOR;

WHILE_MAIN::= do_ WHILE_TYPE CONDICION FIN_CON_COMENT INWHILE_MAIN loop FIN_CON_COMENT;

INWHILE_MAIN ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_WHILE|comentario findelinea | comentario  findelinea INWHILE_MAIN|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INWHILE_MAIN|DECLARACION INWHILE_MAIN|
                 SENTENCIA_WHILE INWHILE_MAIN|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INWHILE_MAIN|LLAMAR_SUB |LLAMAR_SUB  INWHILE_MAIN|exit do_ FIN_CON_COMENT INWHILE_MAIN|exit do_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INWHILE_MAIN|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INWHILE_MAIN;

SENTENCIA_WHILE ::= IF_WHILE |FOR_WHILE|WHILE_MAIN;

INIF_WHILE ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_WHILE|comentario findelinea | comentario  findelinea INIF_WHILE|
               console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF_WHILE|DECLARACION INIF_WHILE|
               SENTENCIA_WHILE INIF_WHILE|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INIF_WHILE|LLAMAR_SUB |LLAMAR_SUB  INIF_WHILE|exit do_ FIN_CON_COMENT INIF_WHILE|exit sub FIN_CON_COMENT INIF_WHILE|exit do_ FIN_CON_COMENT|exit sub FIN_CON_COMENT|
               console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF_WHILE|
               console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF_WHILE; 

IF_WHILE ::= if_ CONDICION then FIN_CON_COMENT INIF_WHILE  end_ if_ FIN_CON_COMENT|
             if_ CONDICION then FIN_CON_COMENT INIF_WHILE  else_ FIN_CON_COMENT INIF_WHILE  end_ if_ FIN_CON_COMENT|
             if_ CONDICION then FIN_CON_COMENT INIF_WHILE ELSE_IF_WHILE FIN_CON_COMENT INIF_WHILE end_ if_ FIN_CON_COMENT|
             if_ CONDICION then FIN_CON_COMENT INIF_WHILE ELSE_IF_WHILE2 end_ if_ FIN_CON_COMENT;

ELSE_IF_WHILE ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT  INIF_WHILE else_|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE ELSE_IF_WHILE;
ELSE_IF_WHILE2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT  INIF_WHILE |ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE ELSE_IF_WHILE2;

FOR_WHILE ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO FIN_CON_COMENT INFOR_WHILE next identificador FIN_CON_COMENT;

INFOR_WHILE ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INFOR_WHILE|
                SENTENCIA_FOR|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INFOR_WHILE|
                DECLARACION INFOR_WHILE|SENTENCIA_FOR INFOR_WHILE|LLAMAR_FUNCION FIN_CON_COMENT|
                LLAMAR_FUNCION FIN_CON_COMENT INFOR_WHILE |LLAMAR_SUB |LLAMAR_SUB  INFOR_WHILE|exit for_ FIN_CON_COMENT INFOR_WHILE|exit do_ FIN_CON_COMENT INFOR_WHILE|exit for_ FIN_CON_COMENT|exit do_ FIN_CON_COMENT|
                console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INFOR_WHILE|
                console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INFOR_WHILE;

LLAMAR_FUNCION ::= identificador parentesisA parentesisC| identificador parentesisA PARAMETRO_SENCILLO;

PARAMETRO_SENCILLO ::=  PARAMETROS_TYPE  parentesisC|PARAMETROS_TYPE coma_ PARAMETRO_SENCILLO|parentesisA PARAMETROS_TYPE parentesisC coma_ PARAMETRO_SENCILLO|
                        parentesisA PARAMETROS_TYPE parentesisC  parentesisC;

PARAMETROS_TYPE ::= identificador|BOOLEAN|NUMERO;

DECLARACIONSENCILLA ::= dim identificador as TYPE_ FIN_CON_COMENT|dim identificador as TYPE_ FIN_CON_COMENT DECLARACIONSENCILLA;

STRUCT_ ::= Public_ struct_ identificador FIN_CON_COMENT DECLARACIONSENCILLA end_ struct_ ;

FUNCION_ ::= private_ function_ identificador parentesisA PARAMETRO parentesisC as TYPE_ FIN_CON_COMENT INFUNCION end_ function_;

PARAMETRO ::= identificador as TYPE_|identificador as TYPE_ coma_ PARAMETRO|byval identificador as TYPE_ coma_ PARAMETRO|byval identificador as TYPE_;

INFUNCION ::=  console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_FUNCION|comentario findelinea | comentario  findelinea INFUNCION|
               LLAMAR_FUNCION FIN_CON_COMENT|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INFUNCION|DECLARACION INFUNCION|
               SENTENCIA_FUNCION INFUNCION|LLAMAR_FUNCION FIN_CON_COMENT INFUNCION|LLAMAR_SUB |LLAMAR_SUB  INFUNCION|exit function_ FIN_CON_COMENT INFUNCION|exit function_ FIN_CON_COMENT|
               console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INFUNCION|
               console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INFUNCION;

SENTENCIA_FUNCION ::= IF_FUNCION|FOR_FUNCION|WHILE_FUNCION;

IF_FUNCION ::=if_ CONDICION then FIN_CON_COMENT INIF_FUNCION  end_ if_ FIN_CON_COMENT|
              if_ CONDICION then FIN_CON_COMENT INIF_FUNCION  else_ FIN_CON_COMENT INIF_FUNCION  end_ if_ FIN_CON_COMENT|
              if_ CONDICION then FIN_CON_COMENT INIF_FUNCION ELSE_IF_FUNCION FIN_CON_COMENT INIF_FUNCION end_ if_ FIN_CON_COMENT|
              if_ CONDICION then FIN_CON_COMENT INIF_FUNCION ELSE_IF_FUNCION2 end_ if_ FIN_CON_COMENT;

INIF_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INIF_FUNCION|
                 SENTENCIA_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF_FUNCION|DECLARACION INIF_FUNCION|
                 SENTENCIA_FUNCION INIF_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INIF_FUNCION |LLAMAR_SUB |LLAMAR_SUB  INIF_FUNCION |exit function_ FIN_CON_COMENT INIF_FUNCION |exit function_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF_FUNCION;

ELSE_IF_FUNCION ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FUNCION else_|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FUNCION ELSE_IF_FUNCION;
ELSE_IF_FUNCION2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FUNCION |ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FUNCION ELSE_IF_FUNCION2;

FOR_FUNCION ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO FIN_CON_COMENT INFOR_FUNCION next identificador FIN_CON_COMENT;

INFOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INFOR_FUNCION|
                  SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INFOR_FUNCION|DECLARACION INFOR_FUNCION|
                  SENTENCIA_FOR_FUNCION INFOR_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INFOR_FUNCION |LLAMAR_SUB |LLAMAR_SUB  INFOR_FUNCION|exit function_ FIN_CON_COMENT INFOR_FUNCION |exit function_ FIN_CON_COMENT|exit for_ FIN_CON_COMENT INFOR_FUNCION|exit for_ FIN_CON_COMENT|
                  console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INFOR_FUNCION|
                  console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INFOR_FUNCION;

SENTENCIA_FOR_FUNCION ::= IF_FOR_FUNCION |FOR_FUNCION|WHILE_FOR_FUNCION;

IF_FOR_FUNCION ::= if_ CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION  end_ if_ FIN_CON_COMENT|
                   if_ CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION  else_ FIN_CON_COMENT INIF_FOR_FUNCION  end_ if_ FIN_CON_COMENT|
                   if_ CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION FIN_CON_COMENT INIF_FOR_FUNCION end_ if_ FIN_CON_COMENT|
                   if_ CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION2 end_ if_ FIN_CON_COMENT;

INIF_FOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INIF_FOR_FUNCION|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF_FOR_FUNCION|DECLARACION INIF_FOR_FUNCION|
                 SENTENCIA_FOR_FUNCION INIF_FOR_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INIF_FUNCION |LLAMAR_SUB |LLAMAR_SUB  INIF_FOR_FUNCION|exit function_ FIN_CON_COMENT INIF_FOR_FUNCION| exit function_ FIN_CON_COMENT|exit for_ FIN_CON_COMENT INIF_FOR_FUNCION|exit for_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF_FOR_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF_FOR_FUNCION; 

ELSE_IF_FOR_FUNCION ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION else_|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION;
ELSE_IF_FOR_FUNCION2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION |ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_FOR_FUNCION ELSE_IF_FOR_FUNCION2;

WHILE_FOR_FUNCION::= do_ WHILE_TYPE CONDICION FIN_CON_COMENT INWHILE_FOR_FUNCION loop FIN_CON_COMENT;

INWHILE_FOR_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_WHILE|comentario findelinea | comentario  findelinea INWHILE_FOR_FUNCION|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INWHILE_FOR_FUNCION|DECLARACION INWHILE_FOR_FUNCION|
                 SENTENCIA_WHILE INWHILE_FOR_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INWHILE_FOR_FUNCION|LLAMAR_SUB |LLAMAR_SUB  INWHILE_FOR_FUNCION|exit do_ FIN_CON_COMENT INWHILE_FOR_FUNCION|exit for_ FIN_CON_COMENT INWHILE_FOR_FUNCION| exit function_ FIN_CON_COMENT INWHILE_FOR_FUNCION|exit do_ FIN_CON_COMENT |exit for_ FIN_CON_COMENT | exit function_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INWHILE_FOR_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INWHILE_FOR_FUNCION;

WHILE_FUNCION::= do_ WHILE_TYPE CONDICION FIN_CON_COMENT INWHILE_FUNCION loop FIN_CON_COMENT;

INWHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INWHILE_FUNCION|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INWHILE_FUNCION|DECLARACION INWHILE_FUNCION|
                 SENTENCIA_FOR_FUNCION INWHILE_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INWHILE_FUNCION|LLAMAR_SUB |LLAMAR_SUB  INWHILE_FUNCION |exit do_ FIN_CON_COMENT INWHILE_FUNCION|exit function_ FIN_CON_COMENT INWHILE_FUNCION| exit do_ FIN_CON_COMENT |exit function_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INWHILE_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INWHILE_FUNCION;

SENTENCIA_WHILE_FUNCION ::= IF_WHILE_FUNCION |FOR_WHILE_FUNCION|WHILE_FUNCION;

IF_WHILE_FUNCION ::= if_ CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION end_ if_ FIN_CON_COMENT |if_ CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION else_ INIF_WHILE_FUNCION end_ if_ FIN_CON_COMENT|
                     if_ CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION else_ FIN_CON_COMENT INIF_WHILE_FUNCION end_ if_ FIN_CON_COMENT |
                     if_ CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION FIN_CON_COMENT|
                     if_ CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION2 end_ if_ FIN_CON_COMENT;
                     

INIF_WHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|comentario findelinea | comentario  findelinea INIF_WHILE_FUNCION|
                 SENTENCIA_FOR_FUNCION|console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INIF_WHILE_FUNCION|DECLARACION INIF_WHILE_FUNCION|
                 SENTENCIA_FOR_FUNCION INIF_WHILE_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INIF_WHILE_FUNCION |LLAMAR_SUB |LLAMAR_SUB  INIF_WHILE_FUNCION| exit function_ FIN_CON_COMENT INIF_WHILE_FUNCION|exit for_ FIN_CON_COMENT INIF_WHILE_FUNCION| exit function_ FIN_CON_COMENT|exit for_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INIF_WHILE_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INIF_WHILE_FUNCION;

ELSE_IF_WHILE_FUNCION ::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION else_|ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION;
ELSE_IF_WHILE_FUNCION2::= ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION |ELSEIF_TYPE CONDICION then FIN_CON_COMENT INIF_WHILE_FUNCION ELSE_IF_WHILE_FUNCION2;


FOR_WHILE_FUNCION ::= for_ identificador igual NUMERO to NUMERO step_ NUMERO FIN_CON_COMENT INFOR_WHILE_FUNCION next identificador FIN_CON_COMENT;

INFOR_WHILE_FUNCION ::= console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT|DECLARACION|SENTENCIA_WHILE|comentario findelinea | comentario  findelinea INFOR_WHILE_FUNCION|
                 console_ punto writeline parentesisA  INPARENTESIS parentesisC FIN_CON_COMENT INFOR_WHILE_FUNCION|DECLARACION INFOR_WHILE_FUNCION|
                 SENTENCIA_WHILE INFOR_WHILE_FUNCION|LLAMAR_FUNCION FIN_CON_COMENT|LLAMAR_FUNCION FIN_CON_COMENT INFOR_WHILE_FUNCION|LLAMAR_SUB |LLAMAR_SUB  INFOR_WHILE_FUNCION|exit do_ FIN_CON_COMENT INFOR_WHILE_FUNCION|exit for_ FIN_CON_COMENT INFOR_WHILE_FUNCION| exit function_ FIN_CON_COMENT INFOR_WHILE_FUNCION|exit do_ FIN_CON_COMENT |exit for_ FIN_CON_COMENT | exit function_ FIN_CON_COMENT|
                 console_ punto writeline parentesisA parentesisC FIN_CON_COMENT|console_ punto writeline parentesisA parentesisC FIN_CON_COMENT INFOR_WHILE_FUNCION|
                 console_ punto readline parentesisA parentesisC FIN_CON_COMENT|console_ punto readline parentesisA parentesisC FIN_CON_COMENT INFOR_WHILE_FUNCION;